import {
  DocumentStatus,
  RelativeTime
} from "./chunk-5XS6P4SM.js";
import {
  contentManagerApi
} from "./chunk-LVE7TIQD.js";
import "./chunk-L6ZGRLN6.js";
import "./chunk-K6ZHYIUS.js";
import {
  Widget
} from "./chunk-PYZKX37C.js";
import "./chunk-UFNUVUBG.js";
import "./chunk-4J3VOWQV.js";
import "./chunk-MO7V4F4H.js";
import "./chunk-OJYSOYMH.js";
import "./chunk-MYT6PLBU.js";
import "./chunk-UEC57UCR.js";
import "./chunk-5NOJLJHI.js";
import "./chunk-AFTCF3SG.js";
import "./chunk-QNCQ63QK.js";
import "./chunk-AXEKHI3E.js";
import "./chunk-SJ7XL3V3.js";
import "./chunk-JLRDI23U.js";
import "./chunk-6DBAV3GD.js";
import "./chunk-MBK4V2X7.js";
import "./chunk-CSZPFXEB.js";
import "./chunk-K65KIEAL.js";
import "./chunk-BX3SAUOA.js";
import "./chunk-HSC6GHKT.js";
import "./chunk-SYKORUPO.js";
import "./chunk-LZ2LNMG6.js";
import "./chunk-DEUAYEZU.js";
import {
  useTracking
} from "./chunk-4EJE3JWV.js";
import "./chunk-QIJGNK42.js";
import "./chunk-ZK2UXP2R.js";
import "./chunk-PVNU2EMK.js";
import "./chunk-QIHAJNTC.js";
import "./chunk-XPMTFXHX.js";
import "./chunk-X2KHU5ES.js";
import "./chunk-5RRIPYMC.js";
import "./chunk-D4WYVNVM.js";
import "./chunk-MMOBCIZG.js";
import "./chunk-IFOFBKTA.js";
import "./chunk-3G2PKPNF.js";
import "./chunk-EGNP2T5O.js";
import "./chunk-YXDCVYVT.js";
import "./chunk-UISSB23U.js";
import "./chunk-FVC6I44R.js";
import "./chunk-57GQ6RSA.js";
import "./chunk-SS7625EV.js";
import "./chunk-2AXQWV6R.js";
import "./chunk-PQINNV4N.js";
import "./chunk-VYSYYPOB.js";
import "./chunk-GQL2UMJT.js";
import "./chunk-CYDXWTFF.js";
import "./chunk-R3JGDD2R.js";
import "./chunk-BHLYCXQ7.js";
import "./chunk-BLJUR3JO.js";
import "./chunk-5NVQKCL7.js";
import "./chunk-UK6DS3MU.js";
import "./chunk-USIB4YV3.js";
import "./chunk-CE4VABH2.js";
import "./chunk-5VODLFKF.js";
import {
  Box,
  IconButton,
  Table,
  Tbody,
  Td,
  Tr,
  Typography,
  useIntl
} from "./chunk-JPQA3V3N.js";
import "./chunk-5ZC4PE57.js";
import {
  Link,
  useNavigate
} from "./chunk-TUXTO2Z5.js";
import "./chunk-FOD4ENRR.js";
import {
  ForwardRef$1v
} from "./chunk-QXF2FKMZ.js";
import {
  require_jsx_runtime
} from "./chunk-NIAJZ5MX.js";
import {
  dt
} from "./chunk-6EUTJK7T.js";
import "./chunk-MADUDGYZ.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@strapi/content-manager/dist/admin/components/Widgets.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@strapi/content-manager/dist/admin/services/homepage.mjs
var homepageService = contentManagerApi.enhanceEndpoints({
  addTagTypes: [
    "RecentDocumentList"
  ]
}).injectEndpoints({
  /**
   * TODO: Remove overrideExisting when we remove the future flag
   * and delete the old homepage service in the admin
   */
  overrideExisting: true,
  endpoints: (builder) => ({
    getRecentDocuments: builder.query({
      query: (params) => `/content-manager/homepage/recent-documents?action=${params.action}`,
      transformResponse: (response) => response.data,
      providesTags: (res, _err, { action }) => [
        {
          type: "RecentDocumentList",
          id: action
        }
      ]
    })
  })
});
var { useGetRecentDocumentsQuery } = homepageService;

// node_modules/@strapi/content-manager/dist/admin/components/Widgets.mjs
var CellTypography = dt(Typography).attrs({
  maxWidth: "14.4rem",
  display: "block"
})`
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
`;
var RecentDocumentsTable = ({ documents }) => {
  const { formatMessage } = useIntl();
  const { trackUsage } = useTracking();
  const navigate = useNavigate();
  const getEditViewLink = (document) => {
    const isSingleType = document.kind === "singleType";
    const kindPath = isSingleType ? "single-types" : "collection-types";
    const queryParams = document.locale ? `?plugins[i18n][locale]=${document.locale}` : "";
    return `/content-manager/${kindPath}/${document.contentTypeUid}${isSingleType ? "" : "/" + document.documentId}${queryParams}`;
  };
  const handleRowClick = (document) => () => {
    trackUsage("willEditEntryFromHome");
    const link = getEditViewLink(document);
    navigate(link);
  };
  return (0, import_jsx_runtime.jsx)(Table, {
    colCount: 5,
    rowCount: (documents == null ? void 0 : documents.length) ?? 0,
    children: (0, import_jsx_runtime.jsx)(Tbody, {
      children: documents == null ? void 0 : documents.map((document) => (0, import_jsx_runtime.jsxs)(Tr, {
        onClick: handleRowClick(document),
        cursor: "pointer",
        children: [
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(CellTypography, {
              title: document.title,
              variant: "omega",
              textColor: "neutral800",
              children: document.title
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(CellTypography, {
              variant: "omega",
              textColor: "neutral600",
              children: document.kind === "singleType" ? formatMessage({
                id: "content-manager.widget.last-edited.single-type",
                defaultMessage: "Single-Type"
              }) : formatMessage({
                id: document.contentTypeDisplayName,
                defaultMessage: document.contentTypeDisplayName
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(Box, {
              display: "inline-block",
              children: document.status ? (0, import_jsx_runtime.jsx)(DocumentStatus, {
                status: document.status
              }) : (0, import_jsx_runtime.jsx)(Typography, {
                textColor: "neutral600",
                "aria-hidden": true,
                children: "-"
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(Typography, {
              textColor: "neutral600",
              children: (0, import_jsx_runtime.jsx)(RelativeTime, {
                timestamp: new Date(document.updatedAt)
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            onClick: (e) => e.stopPropagation(),
            children: (0, import_jsx_runtime.jsx)(Box, {
              display: "inline-block",
              children: (0, import_jsx_runtime.jsx)(IconButton, {
                tag: Link,
                to: getEditViewLink(document),
                onClick: () => trackUsage("willEditEntryFromHome"),
                label: formatMessage({
                  id: "content-manager.actions.edit.label",
                  defaultMessage: "Edit"
                }),
                variant: "ghost",
                children: (0, import_jsx_runtime.jsx)(ForwardRef$1v, {})
              })
            })
          })
        ]
      }, document.documentId))
    })
  });
};
var LastEditedWidget = () => {
  const { formatMessage } = useIntl();
  const { data, isLoading, error } = useGetRecentDocumentsQuery({
    action: "update"
  });
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !data) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, {
      children: formatMessage({
        id: "content-manager.widget.last-edited.no-data",
        defaultMessage: "No edited entries"
      })
    });
  }
  return (0, import_jsx_runtime.jsx)(RecentDocumentsTable, {
    documents: data
  });
};
var LastPublishedWidget = () => {
  const { formatMessage } = useIntl();
  const { data, isLoading, error } = useGetRecentDocumentsQuery({
    action: "publish"
  });
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !data) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, {
      children: formatMessage({
        id: "content-manager.widget.last-published.no-data",
        defaultMessage: "No published entries"
      })
    });
  }
  return (0, import_jsx_runtime.jsx)(RecentDocumentsTable, {
    documents: data
  });
};
export {
  LastEditedWidget,
  LastPublishedWidget
};
//# sourceMappingURL=Widgets-Y26LL64M.js.map
